// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Modules.ParishManagement.Persistence;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Modules.ParishManagement.Persistence.Migrations
{
    [DbContext(typeof(ParishManagementDbContext))]
    [Migration("20250830170035_NewsTable")]
    partial class NewsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("parishmanagement")
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Modules.ParishManagement.Domain.Masses.MassLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("IsHeadquarters")
                        .HasColumnType("boolean")
                        .HasColumnName("is_headquarters");

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision")
                        .HasColumnName("latitude");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision")
                        .HasColumnName("longitude");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("name");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_mass_location");

                    b.ToTable("mass_location", "parishmanagement");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.Masses.MassSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("day");

                    b.Property<Guid>("MassLocationId")
                        .HasColumnType("uuid")
                        .HasColumnName("mass_location_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_mass_schedule");

                    b.HasIndex("MassLocationId")
                        .HasDatabaseName("ix_mass_schedule_mass_location_id");

                    b.ToTable("mass_schedule", "parishmanagement");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.Masses.MassTime", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("MassScheduleId")
                        .HasColumnType("uuid")
                        .HasColumnName("mass_schedule_id");

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time")
                        .HasColumnName("time");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_mass_time");

                    b.HasIndex("MassScheduleId")
                        .HasDatabaseName("ix_mass_time_mass_schedule_id");

                    b.ToTable("mass_time", "parishmanagement");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.Members.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)")
                        .HasColumnName("full_name");

                    b.Property<Guid>("IdentityProviderId")
                        .HasColumnType("uuid")
                        .HasColumnName("identity_provider_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_member");

                    b.ToTable("member", "parishmanagement");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.NewsFolder.News", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<bool>("Highlight")
                        .HasColumnType("boolean")
                        .HasColumnName("highlight");

                    b.Property<DateTime?>("HighlightUntil")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("highlight_until");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("summary");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("title");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_news");

                    b.ToTable("news", "parishmanagement");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.NewsFolder.NewsFile", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<Guid>("NewsId")
                        .HasColumnType("uuid")
                        .HasColumnName("news_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.ComplexProperty<Dictionary<string, object>>("UploadInfo", "Modules.ParishManagement.Domain.NewsFolder.NewsFile.UploadInfo#UploadInfo", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("ContentType")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("upload_info_content_type");

                            b1.Property<string>("FileName")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("upload_info_file_name");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("upload_info_title");
                        });

                    b.HasKey("Id")
                        .HasName("pk_news_file");

                    b.HasIndex("NewsId")
                        .HasDatabaseName("ix_news_file_news_id");

                    b.ToTable("news_file", "parishmanagement");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.OtherSchedules.OtherSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)")
                        .HasColumnName("title");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_other_schedule");

                    b.ToTable("other_schedule", "parishmanagement");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.PendingMembers.PendingMember", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("full_name");

                    b.Property<int>("MemberType")
                        .HasColumnType("integer")
                        .HasColumnName("member_type");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("token");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_pending_member");

                    b.ToTable("pending_member", "parishmanagement");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.Masses.MassSchedule", b =>
                {
                    b.HasOne("Modules.ParishManagement.Domain.Masses.MassLocation", null)
                        .WithMany("MassSchedules")
                        .HasForeignKey("MassLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_mass_schedule_mass_location_mass_location_id");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.Masses.MassTime", b =>
                {
                    b.HasOne("Modules.ParishManagement.Domain.Masses.MassSchedule", null)
                        .WithMany("MassTimes")
                        .HasForeignKey("MassScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_mass_time_mass_schedule_mass_schedule_id");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.NewsFolder.NewsFile", b =>
                {
                    b.HasOne("Modules.ParishManagement.Domain.NewsFolder.News", null)
                        .WithMany("Files")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_news_file_news_news_id");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.Masses.MassLocation", b =>
                {
                    b.Navigation("MassSchedules");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.Masses.MassSchedule", b =>
                {
                    b.Navigation("MassTimes");
                });

            modelBuilder.Entity("Modules.ParishManagement.Domain.NewsFolder.News", b =>
                {
                    b.Navigation("Files");
                });
#pragma warning restore 612, 618
        }
    }
}
